import React from 'react'
<%#
  NOTE: Our headless browser PhantomJS doesn't support HTMLVideoElement.
  Leaflet has a built-in video plugin and its code do an "instanceOf(HTMLVideoElement)",
  which throws an error during tests.
  For this reason, we only import stuff from Leaflet if we are not in test environment.
  In test environment we just create a dummy VenueLocationInput.
%>
<% if Rails.env.test? %>
  export const VenueLocationInput = () => (<div/>);
<% else %>
  // Import leaflet, and the fix for the icon url
  import 'leaflet-wca';
  import { Map, TileLayer, Marker } from "react-leaflet"
  import { userTileProvider } from 'leaflet-wca/providers.js.erb';
  import { toDegrees } from '../utils'
  import { Row, Col } from 'react-bootstrap'
  export class VenueLocationInput extends React.Component {

    invalidateSize = () => {
      this.mapElem.leafletElement.invalidateSize(false);
    }

    componentDidMount() {
      $(window).on('venues-panel-shown', this.invalidateSize);
    }

    componentWillUnmount() {
      $(window).off('venues-panel-shown', this.invalidateSize);
    }

    render() {
      let { lat, lng, actionHandler } = this.props;
      let provider = userTileProvider;
      let mapPosition = { lat: toDegrees(lat), lng: toDegrees(lng) };
      return (
        <Row>
          <Col xs={12}>
            <span className="venue-form-label control-label">Please pick the venue location below:</span>
          </Col>
          <Col xs={12} className="venue-map">
            <Map center={mapPosition}
                 zoom={16}
                 scrollWheelZoom={false}
                 ref={m => { this.mapElem = m; }}
            >
              <TileLayer url={provider.url} attribution={provider.attribution}/>
              <Marker
                position={mapPosition}
                draggable={true}
                onDragend={actionHandler}
              />
            </Map>
          </Col>
        </Row>
      );
    }
  }
<% end %>
