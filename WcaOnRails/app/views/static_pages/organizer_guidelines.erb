<% provide(:title, t("organizer_guidelines.title")) %>
<div class="container">
  <h1><%= yield(:title)  %></h1>
  <%
    def translate_with_structure(key)
      data_english = t(key, locale: :en)
      data_localized = t(key)

      render_item(data_english.deep_merge(data_localized))
    end

    def render_items(items)
      items.map { |item| content_tag(:li, render_item(item)) }.xss_aware_join
    end

    def render_item(item)
      return item.html_safe unless item.is_a? Hash

      "".html_safe.tap do |result|
        item.each do |key, content|
          key = key.to_s
          if key.start_with?("olist")
            result << content_tag(:ol, render_items(content.values))
          elsif key.start_with?("alist")
            result << content_tag(:ol, render_items(content.values), type: "a")
          elsif key.start_with?("list")
            result << content_tag(:ul, render_items(content.values))
          elsif key.start_with?("title")
            result << content_tag(:h4, content)
          else
            result << render_item(content)
          end
        end
      end
    end
  %>

  <%= translate_with_structure("organizer_guidelines") %>
</div>
